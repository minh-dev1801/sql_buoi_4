generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model food_type {
  id        Int       @id @default(autoincrement())
  type_name String?   @db.VarChar(255)
  deletedBy Int       @default(0)
  isDeleted Boolean   @default(false)
  deletedAt DateTime? @db.Timestamp(0)
  createdAt DateTime  @default(now()) @db.Timestamp(0)
  updatedAt DateTime  @default(now()) @db.Timestamp(0)
  foods     foods[]
}

model foods {
  id        Int        @id @default(autoincrement())
  food_name String?    @db.VarChar(255)
  image     String?    @db.VarChar(255)
  price     Float?     @db.Float
  desc      String?    @db.VarChar(255)
  type_id   Int?
  deletedBy Int        @default(0)
  isDeleted Boolean    @default(false)
  deletedAt DateTime?  @db.Timestamp(0)
  createdAt DateTime   @default(now()) @db.Timestamp(0)
  updatedAt DateTime   @default(now()) @db.Timestamp(0)
  food_type food_type? @relation(fields: [type_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "foods_ibfk_1")
  orders    orders[]
  sub_food  sub_food[]

  @@index([type_id], map: "type_id")
}

model like_res {
  id          Int          @id @default(autoincrement())
  user_id     Int?
  res_id      Int?
  is_like     Boolean?     @default(true)
  date_like   DateTime?    @db.DateTime(0)
  deletedBy   Int          @default(0)
  isDeleted   Boolean      @default(false)
  deletedAt   DateTime?    @db.Timestamp(0)
  createdAt   DateTime     @default(now()) @db.Timestamp(0)
  updatedAt   DateTime     @default(now()) @db.Timestamp(0)
  users       users?       @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "like_res_ibfk_1")
  restaurants restaurants? @relation(fields: [res_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "like_res_ibfk_2")

  @@unique([user_id, res_id], map: "unique_user_res")
  @@index([res_id], map: "res_id")
}

model orders {
  id         Int       @id @default(autoincrement())
  user_id    Int?
  food_id    Int?
  amount     Int?
  code       String?   @db.VarChar(255)
  arr_sub_id String?   @db.VarChar(255)
  deletedBy  Int       @default(0)
  isDeleted  Boolean   @default(false)
  deletedAt  DateTime? @db.Timestamp(0)
  createdAt  DateTime  @default(now()) @db.Timestamp(0)
  updatedAt  DateTime  @default(now()) @db.Timestamp(0)
  users      users?    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "orders_ibfk_1")
  foods      foods?    @relation(fields: [food_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "orders_ibfk_2")

  @@index([food_id], map: "food_id")
  @@index([user_id], map: "user_id")
}

model rate_res {
  id          Int          @id @default(autoincrement())
  user_id     Int?
  res_id      Int?
  amount      Int?
  date_rate   DateTime?    @db.DateTime(0)
  deletedBy   Int          @default(0)
  isDeleted   Boolean      @default(false)
  deletedAt   DateTime?    @db.Timestamp(0)
  createdAt   DateTime     @default(now()) @db.Timestamp(0)
  updatedAt   DateTime     @default(now()) @db.Timestamp(0)
  users       users?       @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "rate_res_ibfk_1")
  restaurants restaurants? @relation(fields: [res_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "rate_res_ibfk_2")

  @@unique([user_id, res_id], map: "user_id")
  @@index([res_id], map: "res_id")
}

model restaurants {
  id        Int        @id @default(autoincrement())
  res_name  String?    @db.VarChar(255)
  image     String?    @db.VarChar(255)
  desc      String?    @db.VarChar(255)
  deletedBy Int        @default(0)
  isDeleted Boolean    @default(false)
  deletedAt DateTime?  @db.Timestamp(0)
  createdAt DateTime   @default(now()) @db.Timestamp(0)
  updatedAt DateTime   @default(now()) @db.Timestamp(0)
  like_res  like_res[]
  rate_res  rate_res[]
}

model sub_food {
  id        Int       @id @default(autoincrement())
  sub_name  String?   @db.VarChar(255)
  sub_price Float?    @db.Float
  food_id   Int?
  deletedBy Int       @default(0)
  isDeleted Boolean   @default(false)
  deletedAt DateTime? @db.Timestamp(0)
  createdAt DateTime  @default(now()) @db.Timestamp(0)
  updatedAt DateTime  @default(now()) @db.Timestamp(0)
  foods     foods?    @relation(fields: [food_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "sub_food_ibfk_1")

  @@index([food_id], map: "food_id")
}

model users {
  id        Int        @id @default(autoincrement())
  full_name String?    @db.VarChar(255)
  email     String?    @db.VarChar(255)
  password  String?    @db.VarChar(255)
  deletedBy Int        @default(0)
  isDeleted Boolean    @default(false)
  deletedAt DateTime?  @db.Timestamp(0)
  createdAt DateTime   @default(now()) @db.Timestamp(0)
  updatedAt DateTime   @default(now()) @db.Timestamp(0)
  like_res  like_res[]
  orders    orders[]
  rate_res  rate_res[]
}
